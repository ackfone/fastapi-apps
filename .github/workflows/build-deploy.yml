name: Build and Deploy
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
jobs:
  build:
    environment:
      name: pyfastapi
    env:
      DB_HOST: ${{secrets.DB_HOST}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_NAME: ${{secrets.DB_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      TOKEN_EXPIRE_TIME_MINUTES: ${{secrets.TOKEN_EXPIRE_TIME_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: installing python on the virtual ubuntu
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install depedencies
        run: pip install -r requirements.txt

  deploy:
    environment:
      name: heroku
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: deploying to heroku
        uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}